# Generated by Django 4.2.1 on 2023-06-24 03:05

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apoderado',
            fields=[
                ('id_apoderado', models.AutoField(default=0, primary_key=True, serialize=False)),
                ('nombre_apoderado', models.CharField(default=True, max_length=100)),
                ('direccion', models.CharField(default='Direcci√≥n por defecto', max_length=200)),
                ('telefono', models.CharField(default='000000000', max_length=15)),
                ('correo', models.EmailField(default='example@example.com', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id_Estudiante', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Estudiante')),
                ('primer_nombre', models.CharField(max_length=100)),
                ('segundo_nombre', models.CharField(max_length=100)),
                ('primer_apellido', models.CharField(max_length=100)),
                ('segundo_apellido', models.CharField(max_length=100)),
                ('asistencia', models.BooleanField(default=False)),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Profesor',
            fields=[
                ('nombre', models.CharField(max_length=100, null=True)),
                ('especialidad', models.CharField(max_length=100, null=True)),
                ('correo', models.EmailField(default='example@example.com', max_length=254)),
                ('id_profesor', models.AutoField(default=None, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('asignatura', models.CharField(default='Asignatura desconocida', max_length=100)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('fecha', models.DateField(default=django.utils.timezone.now)),
                ('tipo_evaluacion', models.CharField(max_length=100, null=True)),
                ('profesor', models.CharField(max_length=100, null=True)),
                ('id_nota', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('estudiante', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='notas', to='core.estudiante')),
            ],
        ),
        migrations.CreateModel(
            name='Colegio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=200)),
                ('telefono', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('director', models.CharField(max_length=100)),
                ('estudiantes', models.ManyToManyField(related_name='colegios', to='core.estudiante')),
            ],
        ),
        migrations.CreateModel(
            name='Asistencia',
            fields=[
                ('fecha', models.DateField(null=True)),
                ('presente', models.BooleanField(default=False)),
                ('id', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('estudiante', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='core.estudiante')),
            ],
        ),
        migrations.CreateModel(
            name='Anotacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(null=True)),
                ('mensaje', models.TextField()),
                ('remitente', models.CharField(max_length=100)),
                ('asunto', models.CharField(max_length=200)),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anotaciones', to='core.estudiante')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('admin_id', models.CharField(max_length=10, unique=True)),
                ('telefono', models.CharField(max_length=15)),
                ('cargo', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_query_name='administrador', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_query_name='administrador', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
